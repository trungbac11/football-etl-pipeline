services:
  minio:
    image: "minio/minio"
    container_name: minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001" ]
    volumes:
      - ./minio:/data
    env_file:
      - env
    networks:
      - de_network

  mc:
    image: minio/mc
    container_name: mc
    hostname: mc
    env_file:
      - env
    entrypoint: >
          /bin/sh -c " until (/usr/bin/mc config host add minio http://minio:9000 minio minio123) do echo '...waiting...' && sleep 1;done; /usr/bin/mc mb minio/warehouse; /usr/bin/mc policy set public minio/warehouse; exit 0; "
    depends_on:
      - minio
    networks:
      - de_network

  de_mysql:
    image: mysql:8.0
    container_name: de_mysql
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
      - ./load_dataset:/tmp/load_dataset
    env_file:
      - env
    networks:
      - de_network

  de_psql:
    image: postgres:15
    container_name: de_psql
    volumes:
      - ./postgresql:/var/lib/postgresql/data
      - ./load_dataset:/tmp/load_dataset
    ports:
      - "5432:5432"
    env_file:
      - env
    networks:
      - de_network

  de_streamlit:
    build:
      context: ./streamlit
      dockerfile: Dockerfile
    image: de_streamlit:latest
    container_name: de_streamlit
    volumes:
      - ./app:/app
    env_file: 
      - env
    ports:
      - "8501:8501"
    networks:
      - de_network

  de_dagster:
    build:
      context: ./dagster/
    container_name: de_dagster
    image: de_dagster

  de_dagster_dagit:
    image: de_dagster:latest
    entrypoint:
      - dagit
      - -h
      - "0.0.0.0"
      - -p
      - "3001"
      - -w
      - workspace.yaml
    container_name: de_dagster_dagit
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dagster_home:/opt/dagster/dagster_home
    ports:
      - "3001:3001"
    env_file: 
      - env
    networks:
      - de_network

  de_dagster_daemon:
    image: de_dagster:latest
    entrypoint:
      - dagster-daemon
      - run
    container_name: de_dagster_daemon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dagster_home:/opt/dagster/dagster_home
    env_file: 
      - env
    networks:
      - de_network
    
  # Pipelines
  etl_pipeline:
    build:
      context: ./etl_pipeline
      dockerfile: Dockerfile
    image: etl_pipeline:latest
    container_name: etl_pipeline
    volumes:
      - ./etl_pipeline:/opt/dagster/app
    env_file: 
     - env
    networks:
      - de_network
  
networks:
  de_network:
    driver: bridge
    name: de_network